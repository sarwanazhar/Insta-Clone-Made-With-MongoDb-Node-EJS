<% include ./partials/header.ejs %>
  <div class="w-full min-h-screen bg-zinc-900 px-4 py-5">
    <div class="border-2 border-zinc-800 flex items-center justify-between px-2 py-1 rounded-md">
        <i class="text-white ri-search-line"></i>
        <input class="ml-1 w-full bg-zinc-900 outline-none text-zinc-400" type="text" placeholder="search username" id="inputusername">
    </div>
    <div class="users">

    </div>


  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.2/axios.min.js" integrity="sha512-b94Z6431JyXY14iSXwgzeZurHHRNkLt9d6bAHt7BZT38eqV+GyngIi/tVye4jBKPYQ2lBdRs0glww4fmpuLRwA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script>
const inp = document.querySelector("#inputusername");
const usersContainer = document.querySelector(".users");

// Function to make the API call with debounce
const makeAPICall = debounce(() => {
  let clutter = "hi";
  axios.get(`/username/${inp.value}`)
    .then(function(response) {
      clutter = ""; // Clear previous results
      response.data.forEach(function(elem) {
        clutter += `
          
            <a href="/profile" class="outline-none">
              <div class="text-white flex items-center gap-2 mt-5">
                <div class="image w-[11vw] h-[11vw] rounded-full bg-sky-100 overflow-hidden">
                  <img class="object-cover w-full h-full" src="/images/upload/${elem.profileImage}" alt="">
                </div>
                <div class="text">
                  <h3>${elem.username}</h3>
                  <h4 class="text-xs opacity-30 leading-none">${elem.name}</h4>
                </div>
              </div>
            </a>`;
      });

      // Update the container with the new HTML
      usersContainer.innerHTML = clutter;
    })
    .catch(function(error) {
      console.error(error);
    });
}, 300); // 300 milliseconds debounce time

inp.addEventListener("input", makeAPICall);

// Debounce function implementation
function debounce(func, delay) {
  let timeoutId;
  return function() {
    clearTimeout(timeoutId);
    timeoutId = setTimeout(() => func.apply(this, arguments), delay);
  };
}
  </script>
<% include ./partials/footer.ejs %>